volumes:
  pg_data_production:
  static_volume:
  media_volume:
  redoc_volume:

services:
  db:
     image: 'postgres'
     ports:
       - '5432'
     environment:
            - POSTGRES_DB=booksdb
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
  core:
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      - db
    links:
      - db:db

  backend:
    image: katystred/foodgram_backend
    env_file: .env
    depends_on:
      - db
    volumes:
      - static_volume:/backend_static
      - media_volume:/app/media/
      - redoc_volume:/app/api/docs/

  frontend:
    image: katystred/foodgram_frontend
    env_file: .env
    volumes:
      - static_volume:/frontend_static
    command: cp -r /app/build/. /frontend_static/

  gateway:
    image: katystred/foodgram_gateway
    env_file: .env
    depends_on:
      - frontend
      - backend
      - db
    ports:
      - 9090:80
    volumes:
      - redoc_volume:/usr/share/nginx/html/api/docs/
      - static_volume:/staticfiles/
      - media_volume:/app/media/